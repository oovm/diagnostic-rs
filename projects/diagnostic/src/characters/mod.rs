/// Possible character sets to use when rendering diagnostics.
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
pub enum BuiltinDrawer {
    /// Unicode characters (an attempt is made to use only commonly-supported characters).
    Unicode,
    /// ASCII-only characters.
    Ascii,
}

/// A trait for types that can be used to draw diagnostics.
pub trait Draw {
    /// Get the character set to use when rendering diagnostics.
    fn get_elements(&self) -> DrawElements;
}

impl Draw for BuiltinDrawer {
    fn get_elements(&self) -> DrawElements {
        match self {
            BuiltinDrawer::Unicode => DrawElements {
                hbar: 'â”€',
                vbar: 'â”‚',
                xbar: 'â”¼',
                vbar_break: 'â”†',
                vbar_gap: 'â”†',
                uarrow: 'ðŸ­¯',
                rarrow: 'â–¶',
                ltop: 'â•­',
                mtop: 'â”¬',
                rtop: 'â•®',
                lbot: 'â•°',
                mbot: 'â”´',
                rbot: 'â•¯',
                lbox: '[',
                rbox: ']',
                lcross: 'â”œ',
                rcross: 'â”¤',
                underbar: 'â”¬',
                underline: 'â”€',
            },
            BuiltinDrawer::Ascii => DrawElements {
                hbar: '-',
                vbar: '|',
                xbar: '+',
                vbar_break: '*',
                vbar_gap: ':',
                uarrow: '^',
                rarrow: '>',
                ltop: ',',
                mtop: 'v',
                rtop: '.',
                lbot: '`',
                mbot: '^',
                rbot: '\'',
                lbox: '[',
                rbox: ']',
                lcross: '|',
                rcross: '|',
                underbar: '|',
                underline: '^',
            },
        }
    }
}

/// The character set used by formatter
#[allow(missing_docs)]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
pub struct DrawElements {
    /// Horizontal bar, eg: `â”€, -`
    pub hbar: char,
    /// Vertical bar, eg: `â”‚, |`
    pub vbar: char,
    /// Cross bar, eg: `â”¼, +`
    pub xbar: char,
    /// Vertical bar break, eg: `â”†, *`
    pub vbar_break: char,
    /// Vertical bar gap, eg: `â”†, :`
    pub vbar_gap: char,
    /// Up arrow, eg: `ðŸ­¯, ^`
    pub uarrow: char,
    /// Right arrow, eg: `â–¶, >`
    pub rarrow: char,
    /// Left top corner, eg: `â•­, ,`
    pub ltop: char,
    /// Middle top, eg: `â”¬, v`
    pub mtop: char,
    /// Right top corner, eg: `â•®, .`
    pub rtop: char,
    /// Left bottom corner, eg: `â•°, ``
    pub lbot: char,
    /// Middle bottom, eg: `â”´, ^`
    pub rbot: char,
    /// Right bottom corner, eg: `â•¯, '`
    pub mbot: char,
    /// Left box, eg: `[`
    pub lbox: char,
    /// Right box, eg: `]`
    pub rbox: char,
    /// Left cross, eg: `â”œ, |`
    pub lcross: char,
    /// Right cross, eg: `â”¤, |`
    pub rcross: char,
    /// Under bar, eg: `â”¬, |`
    pub underbar: char,
    /// Underline, eg: `â”€, ^`
    pub underline: char,
}
